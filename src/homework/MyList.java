package homework;

/**
 * Создание интерфейса MyList и его методов
 * @author Александр Волошин
 * @param <E> - любой тип элементов
 */
public interface MyList<E> {
    /**
     * Метод добавляет указанный элемент в конец этого списка
     * @param item - элемент любого типа
     * @return - возвращает boolean выражение о возможности добавления элемента
     */
    public boolean add(E item);

    /**
     * Метод вставляет указанный элемент в указанную позицию в этом списке
     * @param index - индекс/позиция в списке
     * @param item - элемент который будет вставлен в позицию index
     */
    public void add(int index, E item);

    /**
     * Метод возвращает элемент в указанной позиции в этом списке
     * @param index - индекс элемента, кторый необходимо вернуть
     * @return - метод возвращает элемент списка по указанному индексу
     */
    public E get(int index);

    /**
     * Метод заменяет элемент в указанной позиции в этом списке указанным элементом
     * @param index - индекс элемента который будет заменен
     * @param item - элемент который будет вставлен в позицию index
     * @return - метод возвращает замененный элемент
     */
    public E set(int index, E item);

    /**
     * Метод удаляет элемент в указанной позиции в этом списке
     * @param index - индекс элемента который будет удален
     * @return - метод возвращает удаленный элемент по его индексу в списке
     */
    public E remove(int index);

    /**
     * Метод возвращает индекс первого вхождения указанного элемента в этом списке
     * или -1, если этот список не содержит элемента
     * @param item - элемент любого типа
     * @return - метод возвращает индекс указанного элемента или -1 если его нет в списке
     */
    public int indexOf(E item);

    /**
     * Метод возвращает количество элементов в этом списке
     * @return - возвращает число (int)
     */
    public int size();
}
